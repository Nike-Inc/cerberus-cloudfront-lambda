version '1.0.0'

shadowJar {
    baseName = 'cerberus-clean-up-lambda'
    classifier = null
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'

    compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j', version: '1.0.0'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '1.3.0'

    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile 'com.nike:cerberus-client:2.3.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

'aws-sam-deployer' {
    region = getProfileProperty('cerberus.lambda_vpc_region')
    s3Bucket = getProfileProperty('cerberus.lambda_artifact.s3_bucket')
    s3Prefix = "${project.getName()}-artifact-uploads"
    stackName = "${project.environment}-${project.name}"
    samTemplatePath = "${project.projectDir}${File.separator}application.yaml"
    tokenArtifactMap = [
            '@@CODE_URI@@': "${project.buildDir}${File.separator}libs${File.separator}${project.getName()}-${version}.jar"
    ]
    parameterOverrides = [
            CerberusUrl: getProfileProperty('cerberus.url'),
            CerberusEnvironment: "${project.environment}",
            KmsExpirationPeriodInDays: getProfileProperty('cleanup.kms_expiration_period_in_days'),
            Region: getProfileProperty('cerberus.primary_region')
    ]
    logStackOutputs = true
}